type User {
  DIDid: ID!
  firstName: String!
  lastName: String!
  email: String!
}
type Driver {
  DIDid: ID!
  name: String!
  licenseNumber: String!
  dueDate: String!
  email: String!
}

type Issuer {
  DIDid: ID!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  signedIn: Boolean!
}

type Passenger {
  firstName: String!
  lastName: String!
  email: ID!
  password: String!
  signedIn: Boolean!
}

type Query {
  getDrivers: [Driver!]!
  getDriverByDID(DIDid: ID!): Driver
}

type Mutation {
  addDriver(DIDid: ID!, name: String!, licenseNumber: String!, dueDate: String!, email: String!): Driver
  addIssuer(firstName: String!, lastName: String!, DIDid: ID!, email:String!, password:String!): Issuer
  addPassenger(firstName: String!, lastName: String!, email:ID!, password:String!): Passenger
  updateSignedIn(identity: String!, state:Boolean!, email:String!, password:String!): User
}